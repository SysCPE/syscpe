{"version":3,"sources":["App.tsx","config/app_name.ts","reportWebVitals.ts","theme.ts","index.tsx"],"names":["App","useState","hide","setHide","Typography","variant","Button","color","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","primary","main","light","dark","secondary","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"oNAuBeA,MAnBf,WACE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,gCACE,+BAAOD,GAAQ,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,SCTJ,aDUX,8BACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNF,QAAQ,YACRG,QAAS,kBAAML,GAAQ,IAHzB,wBEGOM,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,QCQCQ,EAfDC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,SACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cCHZE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAeV,MAAOA,EAAtB,UACE,cAAC,EAAD,IACA,cAACW,EAAA,EAAD,SAGJC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.ee1b81f9.chunk.js","sourcesContent":["import { Button, Typography } from '@material-ui/core';\nimport APP_NAME from 'config/app_name';\nimport { useState } from 'react';\n\nfunction App() {\n  const [hide, setHide] = useState(false);\n\n  return (\n    <div>\n      <div>{!hide && <Typography variant=\"h6\">{APP_NAME}</Typography>}</div>\n      <div>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setHide(true)}\n        >\n          Hide\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const APP_NAME = 'SysCPE';\n\nexport default APP_NAME;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@material-ui/core';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#efb20',\n      light: '#fdc41c',\n      dark: '#ee7153',\n    },\n    secondary: {\n      main: '#12385b',\n      light: '#72a4d6',\n      dark: '#3676bb',\n    },\n  },\n});\n\nexport default theme;\n","import { ThemeProvider } from '@emotion/react';\nimport { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n      <CssBaseline></CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}